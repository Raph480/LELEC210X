<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classgr_1_1limesdr__fpga_1_1source__fpga" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::limesdr_fpga::source_fpga</compoundname>
    <basecompoundref prot="public" virt="virtual">gr::sync_block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl" prot="public" virt="non-virtual">gr::limesdr_fpga::source_fpga_impl</derivedcompoundref>
    <includes refid="source__fpga_8h" local="no">source_fpga.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a4752027bfb1c22c4adfb95e5c86e4644" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classgr_1_1limesdr__fpga_1_1source__fpga" kindref="compound">source_fpga</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;source_fpga&gt; gr::limesdr_fpga::source_fpga::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="38" column="29" bodyfile="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a1a91b1e74c0ffcccf3b2b3e04b07b331" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a4752027bfb1c22c4adfb95e5c86e4644" kindref="member">sptr</ref></type>
        <definition>static sptr gr::limesdr_fpga::source_fpga::make</definition>
        <argsstring>(std::string serial, int channel_mode, const std::string &amp;filename, bool align_ch_phase)</argsstring>
        <name>make</name>
        <param>
          <type>std::string</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel_mode</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_ch_phase</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1limesdr__fpga_1_1source__fpga" kindref="compound">limesdr_fpga::source_fpga</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1limesdr__fpga_1_1source__fpga" kindref="compound">limesdr_fpga::source_fpga</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a1a91b1e74c0ffcccf3b2b3e04b07b331" kindref="member">limesdr_fpga::source_fpga::make</ref> is the public interface for creating new instances. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Device serial number. Cannot be left blank.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel and mode selection A(1), B(2), (A+B)MIMO(3).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to file if file switch is turned on.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align_ch_phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Perform MIMO phase alignment by calling AlignRxRF() as described in <ulink url="https://github.com/myriadrf/LMS7002M-docs/blob/master/LimeSDR-USB_channel_alignment_v01r00.pdf">https://github.com/myriadrf/LMS7002M-docs/blob/master/LimeSDR-USB_channel_alignment_v01r00.pdf</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="namespacegr_1_1limesdr__fpga" kindref="compound">limesdr_fpga</ref> <ref refid="classgr_1_1limesdr__fpga_1_1source__fpga" kindref="compound">source_fpga</ref> block object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="59" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a39dc6f2ea6033d5db4caa144d6887c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::source_fpga::set_center_freq</definition>
        <argsstring>(double freq, size_t chan=0)=0</argsstring>
        <name>set_center_freq</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1af4563cce48ad8e8143df51990ad5738e">set_center_freq</reimplementedby>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set center frequency</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency to set in Hz</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel (not used)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual center frequency in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="73" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a954e4f2d5837e6374fe51677fa3773ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_antenna</definition>
        <argsstring>(int antenna, int channel=0)=0</argsstring>
        <name>set_antenna</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a0f080154a6dd5341039d8c9a08de4019">set_antenna</reimplementedby>
        <param>
          <type>int</type>
          <declname>antenna</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set which antenna is used</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>antenna</parametername>
</parameternamelist>
<parameterdescription>
<para>Antenna to set: None(0), LNAH(1), LNAL(2), LNAW(3), AUTO(255)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="82" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a73783a5772a272532b42fd56746936e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_nco</definition>
        <argsstring>(float nco_freq, int channel)=0</argsstring>
        <name>set_nco</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1ab36104dc253995f64947252d9bfbd820">set_nco</reimplementedby>
        <param>
          <type>float</type>
          <declname>nco_freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set NCO (numerically controlled oscillator). By selecting NCO frequency configure NCO. When NCO frequency is 0, NCO is off.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nco_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>NCO frequency in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="93" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a4829a8fe7714b21e47d8c179ec3b3dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::source_fpga::set_bandwidth</definition>
        <argsstring>(double analog_bandw, int channel=0)=0</argsstring>
        <name>set_bandwidth</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1ac86032da667b9ddb1cf1ae998b28575c">set_bandwidth</reimplementedby>
        <param>
          <type>double</type>
          <declname>analog_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set analog filters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual filter bandwidth in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="104" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1af2863a9963490908fd21fe957aa418c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_digital_filter</definition>
        <argsstring>(double digital_bandw, int channel)=0</argsstring>
        <name>set_digital_filter</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a51888d0c06b8d8c823979bd56b132bd8">set_digital_filter</reimplementedby>
        <param>
          <type>double</type>
          <declname>digital_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set digital filters (GFIR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>digital_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="113" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a08e6ea837bd0fd9ee86bbcec239f3917" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned</type>
        <definition>virtual unsigned gr::limesdr_fpga::source_fpga::set_gain</definition>
        <argsstring>(unsigned gain_dB, int channel=0)=0</argsstring>
        <name>set_gain</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a0a3c76a1d15539ebeabd88615947996b">set_gain</reimplementedby>
        <param>
          <type>unsigned</type>
          <declname>gain_dB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the combined gain value in dB</para>
<para><simplesect kind="note"><para>actual gain depends on LO frequency and analog LPF configuration and resulting output signal level may be different when those values are changed</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired gain: [0,73] dB</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual gain in dB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="127" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1ab9fb902193176fa63fdcc767a757c7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::source_fpga::set_sample_rate</definition>
        <argsstring>(double rate)=0</argsstring>
        <name>set_sample_rate</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a3a4dd1878eb93d732bfe92426f673f71">set_sample_rate</reimplementedby>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the same sample rate for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate in S/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual sample rate in S/s </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="136" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a83cdef93e634783c06e37c9f345ab8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_oversampling</definition>
        <argsstring>(int oversample)=0</argsstring>
        <name>set_oversampling</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1ae5fa000603237f56310df7d87ebfb909">set_oversampling</reimplementedby>
        <param>
          <type>int</type>
          <declname>oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set oversampling for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oversample</parametername>
</parameternamelist>
<parameterdescription>
<para>Oversampling value (0 (default),1,2,4,8,16,32). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="143" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1ac5a1ad43011d7df0d112baa60c75a647" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::calibrate</definition>
        <argsstring>(double bandw, int channel=0)=0</argsstring>
        <name>calibrate</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a6da10dc03dc885be4865f3c936e278f8">calibrate</reimplementedby>
        <param>
          <type>double</type>
          <declname>bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform device calibration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Set calibration bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="152" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a6b45169f2a8124fc4cec21462ca5202a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_buffer_size</definition>
        <argsstring>(uint32_t size)=0</argsstring>
        <name>set_buffer_size</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a839ccdf9726e5af88b0825dc27cc6b66">set_buffer_size</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set stream buffer size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO buffer size in samples </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="159" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a59707e90ad6d6d76e34088fda8b8e610" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_tcxo_dac</definition>
        <argsstring>(uint16_t dacVal=125)=0</argsstring>
        <name>set_tcxo_dac</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1af2fc5366b520dc226eaf7f0298ebd0b7">set_tcxo_dac</reimplementedby>
        <param>
          <type>uint16_t</type>
          <declname>dacVal</declname>
          <defval>125</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set TCXO DAC. <simplesect kind="note"><para>Care must be taken as this parameter is returned to default value only after power off. </para>
</simplesect>
<simplesect kind="note"><para>LimeSDR-Mini default value is 180 range is [0,255] LimeSDR-USB default value is 125 range is [0,255] LimeSDR-PCIe default value is 134 range is [0,255] LimeNET-Micro default value is 30714 range is [0,65535]</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dacVal</parametername>
</parameternamelist>
<parameterdescription>
<para>DAC value (0-65535) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="172" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1aa3166f1c8b32d650bfcbb9566dc6a436" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::write_lms_reg</definition>
        <argsstring>(uint32_t address, uint16_t val)=0</argsstring>
        <name>write_lms_reg</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a3661d5026ca2c68b6006451abbc00a42">write_lms_reg</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write LMS register</para>
<para>Writes a parameter by calling LMS_WriteLMSReg()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="182" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a7c325c103b34546511166130e6aa846a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_dspcfg_preamble</definition>
        <argsstring>(uint16_t dspcfg_PASSTHROUGH_LEN=100u, uint8_t dspcfg_THRESHOLD=100u, int dspcfg_preamble_en=0)=0</argsstring>
        <name>set_dspcfg_preamble</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a5918b5842d9e5c5d67aac8b3f55781e5">set_dspcfg_preamble</reimplementedby>
        <param>
          <type>uint16_t</type>
          <declname>dspcfg_PASSTHROUGH_LEN</declname>
          <defval>100u</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dspcfg_THRESHOLD</declname>
          <defval>100u</defval>
        </param>
        <param>
          <type>int</type>
          <declname>dspcfg_preamble_en</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Preamble Detector in the datapath.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number from the list of LMS_GetDeviceList. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dspcfg_preamble_en</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value is 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dspcfg_PASSTHROUGH_LEN</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value is 100 range is [1,1024] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dspcfg_THRESHOLD</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value is 100 range is [1,65535] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="192" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1acb63e8a2d22bf28cfc33ae904a34ea04" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t gr::limesdr_fpga::source_fpga::get_dspcfg_long_sum</definition>
        <argsstring>()=0</argsstring>
        <name>get_dspcfg_long_sum</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a64d97dd4b6a475651d05bbc8d8eed999">get_dspcfg_long_sum</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="194" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a01ead4024fdfd8ddee30db163bc6c0e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t gr::limesdr_fpga::source_fpga::get_dspcfg_short_sum</definition>
        <argsstring>()=0</argsstring>
        <name>get_dspcfg_short_sum</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a91346767b2f89b568ed6735688021d60">get_dspcfg_short_sum</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="196" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a4f8b5b4a1e712634eddff6c68a292f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::set_gpio_dir</definition>
        <argsstring>(uint8_t dir)=0</argsstring>
        <name>set_gpio_dir</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a5d997e91186e5a7ceed76684e17fa201">set_gpio_dir</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set GPIO direction</para>
<para>Set GPIO direction by calling LMS_GPIODirWrite()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction bitmap (eight bits, one for each pin, 1 = output, 0 = input) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="205" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a7c5f32d42cf3bd9b577d87b97678a7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::source_fpga::write_gpio</definition>
        <argsstring>(uint8_t out)=0</argsstring>
        <name>write_gpio</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a754f5942ff36299e2b963f463b65e5ed">write_gpio</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write GPIO outputs</para>
<para>Write GPIO outputs by calling LMS_GPIOWrite()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Level bitmap (eight bits, one for each pin) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="214" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1source__fpga_1a4c0663572fe67f30ec0f480645147202" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint8_t</type>
        <definition>virtual uint8_t gr::limesdr_fpga::source_fpga::read_gpio</definition>
        <argsstring>()=0</argsstring>
        <name>read_gpio</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl_1a8864ef53204a8135cae8d69cd0d54744">read_gpio</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read GPIO inputs</para>
<para>Read GPIO inputs by calling LMS_GPIORead()</para>
<para><simplesect kind="return"><para>input level bitmap (eight bits, one for each pin) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="223" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&lt;+description of block+&gt; </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>gr::limesdr_fpga::source_fpga_impl</label>
        <link refid="classgr_1_1limesdr__fpga_1_1source__fpga__impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gr::sync_block</label>
      </node>
      <node id="1">
        <label>gr::limesdr_fpga::source_fpga</label>
        <link refid="classgr_1_1limesdr__fpga_1_1source__fpga"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gr::sync_block</label>
      </node>
      <node id="1">
        <label>gr::limesdr_fpga::source_fpga</label>
        <link refid="classgr_1_1limesdr__fpga_1_1source__fpga"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" line="35" column="1" bodyfile="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/source_fpga.h" bodystart="36" bodyend="224"/>
    <listofallmembers>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1ac5a1ad43011d7df0d112baa60c75a647" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>calibrate</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1acb63e8a2d22bf28cfc33ae904a34ea04" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>get_dspcfg_long_sum</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a01ead4024fdfd8ddee30db163bc6c0e2" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>get_dspcfg_short_sum</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a1a91b1e74c0ffcccf3b2b3e04b07b331" prot="public" virt="non-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>make</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a4c0663572fe67f30ec0f480645147202" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>read_gpio</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a954e4f2d5837e6374fe51677fa3773ec" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_antenna</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a4829a8fe7714b21e47d8c179ec3b3dbc" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_bandwidth</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a6b45169f2a8124fc4cec21462ca5202a" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_buffer_size</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a39dc6f2ea6033d5db4caa144d6887c5b" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1af2863a9963490908fd21fe957aa418c8" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_digital_filter</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a7c325c103b34546511166130e6aa846a" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_dspcfg_preamble</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a08e6ea837bd0fd9ee86bbcec239f3917" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_gain</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a4f8b5b4a1e712634eddff6c68a292f2c" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_gpio_dir</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a73783a5772a272532b42fd56746936e0" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_nco</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a83cdef93e634783c06e37c9f345ab8b1" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_oversampling</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1ab9fb902193176fa63fdcc767a757c7aa" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_sample_rate</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a59707e90ad6d6d76e34088fda8b8e610" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>set_tcxo_dac</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a4752027bfb1c22c4adfb95e5c86e4644" prot="public" virt="non-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>sptr</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1a7c5f32d42cf3bd9b577d87b97678a7c2" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>write_gpio</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1source__fpga_1aa3166f1c8b32d650bfcbb9566dc6a436" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::source_fpga</scope><name>write_lms_reg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
