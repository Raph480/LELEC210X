<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classgr_1_1limesdr__fpga_1_1sink__fpga" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::limesdr_fpga::sink_fpga</compoundname>
    <basecompoundref prot="public" virt="virtual">gr::sync_block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl" prot="public" virt="non-virtual">gr::limesdr_fpga::sink_fpga_impl</derivedcompoundref>
    <includes refid="sink__fpga_8h" local="no">sink_fpga.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab990a12df6e3205f5d3ef669eeb633a5" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga" kindref="compound">sink_fpga</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;sink_fpga&gt; gr::limesdr_fpga::sink_fpga::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="32" column="29" bodyfile="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a524319214077b67b9bc8ec69fe5fa70b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab990a12df6e3205f5d3ef669eeb633a5" kindref="member">sptr</ref></type>
        <definition>static sptr gr::limesdr_fpga::sink_fpga::make</definition>
        <argsstring>(std::string serial, int channel_mode, const std::string &amp;filename, const std::string &amp;length_tag_name)</argsstring>
        <name>make</name>
        <param>
          <type>std::string</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel_mode</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>length_tag_name</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga" kindref="compound">sink_fpga</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga" kindref="compound">sink_fpga</ref>&apos;s constructor is private. <ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a524319214077b67b9bc8ec69fe5fa70b" kindref="member">limesdr_fpga::sink_fpga::make</ref> is the public interface for creating new instances.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Device serial number. Cannot be left blank.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel and mode selection A(1), B(2), (A+B)MIMO(3).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to file if file switch is turned on.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_tag_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of stream burst length tag</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="namespacegr_1_1limesdr__fpga" kindref="compound">limesdr_fpga</ref> <ref refid="classgr_1_1limesdr__fpga_1_1sink__fpga" kindref="compound">sink_fpga</ref> block object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="50" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a99ecd8d500e755d77d98a2006e2bc8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::sink_fpga::set_center_freq</definition>
        <argsstring>(double freq, size_t chan=0)=0</argsstring>
        <name>set_center_freq</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a27a9e26a263b913e228c217791b91ce2">set_center_freq</reimplementedby>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set center frequency</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency to set in Hz</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel (not used)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual center frequency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="63" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a79fbe05e44f7b784891caaabc0801f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_antenna</definition>
        <argsstring>(int antenna, int channel=0)=0</argsstring>
        <name>set_antenna</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1ad0796dc358bcc9b552b567eaf737834d">set_antenna</reimplementedby>
        <param>
          <type>int</type>
          <declname>antenna</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set which antenna is used</para>
<para><simplesect kind="note"><para>setting antenna to BAND1 or BAND2 will enable PA path and because of that Lime boards will transmit CW signal, even when stream is stopped.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>antenna</parametername>
</parameternamelist>
<parameterdescription>
<para>Antenna to set: None(0), BAND1(1), BAND(2), NONE(3), AUTO(255)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="75" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1ad198f9150b40eccd48251672001af63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_nco</definition>
        <argsstring>(float nco_freq, int channel)=0</argsstring>
        <name>set_nco</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1ac3fab679bd00ba4166d1f00475138a6d">set_nco</reimplementedby>
        <param>
          <type>float</type>
          <declname>nco_freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set NCO (numerically controlled oscillator). By selecting NCO frequency configure NCO. When NCO frequency is 0, NCO is off.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nco_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>NCO frequency in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="85" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a1ec91b7945d1eb75210d6f8e00012d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::sink_fpga::set_bandwidth</definition>
        <argsstring>(double analog_bandw, int channel=0)=0</argsstring>
        <name>set_bandwidth</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1ac58198bb4a77f4ab8320512062ceb48f">set_bandwidth</reimplementedby>
        <param>
          <type>double</type>
          <declname>analog_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set analog filters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual filter bandwidth in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="95" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a66db89a5b359c359dc9951012d69ed7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_digital_filter</definition>
        <argsstring>(double digital_bandw, int channel)=0</argsstring>
        <name>set_digital_filter</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a177a79f5c85c56ff7d54aacd2080b211">set_digital_filter</reimplementedby>
        <param>
          <type>double</type>
          <declname>digital_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set digital filters (GFIR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>digital_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="103" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a4e8b1667ff902b5883a73467dade77fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned</type>
        <definition>virtual unsigned gr::limesdr_fpga::sink_fpga::set_gain</definition>
        <argsstring>(unsigned gain_dB, int channel=0)=0</argsstring>
        <name>set_gain</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1afc5e87a42d301beb4893739d1fbb58ed">set_gain</reimplementedby>
        <param>
          <type>unsigned</type>
          <declname>gain_dB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the combined gain value in dB</para>
<para><simplesect kind="note"><para>actual gain depends on LO frequency and analog LPF configuration and resulting output signal level may be different when those values are changed</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired gain: [0,73] dB</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual gain in dB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="116" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab8f95b452587522b4451b620c171844b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::limesdr_fpga::sink_fpga::set_sample_rate</definition>
        <argsstring>(double rate)=0</argsstring>
        <name>set_sample_rate</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a6b90e1f429aa549e346ca35f19a3ce40">set_sample_rate</reimplementedby>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the same sample rate for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate in S/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual sample rate in S/s </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="124" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a79ab082f07e516a4b4dca8424833ef46" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_oversampling</definition>
        <argsstring>(int oversample)=0</argsstring>
        <name>set_oversampling</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1ad39ba70e95e304231ec535c79f5c8d94">set_oversampling</reimplementedby>
        <param>
          <type>int</type>
          <declname>oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set oversampling for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oversample</parametername>
</parameternamelist>
<parameterdescription>
<para>Oversampling value (0 (default),1,2,4,8,16,32). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="130" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1aade1722dc35cd9dd0c6ad66fc08094a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::calibrate</definition>
        <argsstring>(double bandw, int channel=0)=0</argsstring>
        <name>calibrate</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1aa7ccb826e324c59f334d4f35eab578f7">calibrate</reimplementedby>
        <param>
          <type>double</type>
          <declname>bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform device calibration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Set calibration bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="138" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a047492a83a7070f3a247f0d8c9d26e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_buffer_size</definition>
        <argsstring>(uint32_t size)=0</argsstring>
        <name>set_buffer_size</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1ad6710f9036adadb9582c696be7d5cb3f">set_buffer_size</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set stream buffer size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO buffer size in samples </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="144" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a76b975df9e62a95cd34cf8ebb7451bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_tcxo_dac</definition>
        <argsstring>(uint16_t dacVal=125)=0</argsstring>
        <name>set_tcxo_dac</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a80b3d5f23fc9c58ad9181270e94b3721">set_tcxo_dac</reimplementedby>
        <param>
          <type>uint16_t</type>
          <declname>dacVal</declname>
          <defval>125</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set TCXO DAC. <simplesect kind="note"><para>Care must be taken as this parameter is returned to default value only after power off. </para>
</simplesect>
<simplesect kind="note"><para>LimeSDR-Mini default value is 180 range is [0,255] LimeSDR-USB default value is 125 range is [0,255] LimeSDR-PCIe default value is 134 range is [0,255] LimeNET-Micro default value is 30714 range is [0,65535]</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dacVal</parametername>
</parameternamelist>
<parameterdescription>
<para>DAC value (0-65535) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="156" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a627b4d295ae063099cbcf6b804d03d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::write_lms_reg</definition>
        <argsstring>(uint32_t address, uint16_t val)=0</argsstring>
        <name>write_lms_reg</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a4394987e67dc7acf6a5589bb227bde9e">write_lms_reg</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write LMS register</para>
<para>Writes a parameter by calling LMS_WriteLMSReg()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="166" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab029fb0b30a34b12d5efef98597f615e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::set_gpio_dir</definition>
        <argsstring>(uint8_t dir)=0</argsstring>
        <name>set_gpio_dir</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a71070300cba2c002fd38c4cfaac1edf6">set_gpio_dir</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set GPIO direction</para>
<para>Set GPIO direction by calling LMS_GPIODirWrite()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction bitmap (eight bits, one for each pin, 1 = output, 0 = input) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="175" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1a4efd755f6efe793a5600a35a292e8d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::limesdr_fpga::sink_fpga::write_gpio</definition>
        <argsstring>(uint8_t out)=0</argsstring>
        <name>write_gpio</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1a8353259bf7c74c97a99b7d0bcb335b6f">write_gpio</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write GPIO outputs</para>
<para>Write GPIO outputs by calling LMS_GPIOWrite()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Level bitmap (eight bits, one for each pin) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="184" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr__fpga_1_1sink__fpga_1ada66db23db758aeb7ea4a42cb5491328" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint8_t</type>
        <definition>virtual uint8_t gr::limesdr_fpga::sink_fpga::read_gpio</definition>
        <argsstring>()=0</argsstring>
        <name>read_gpio</name>
        <reimplementedby refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl_1aa99e70ce202a65c864cf7ea8450a197e">read_gpio</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read GPIO inputs</para>
<para>Read GPIO inputs by calling LMS_GPIORead()</para>
<para><simplesect kind="return"><para>input level bitmap (eight bits, one for each pin) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="193" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gr::sync_block</label>
      </node>
      <node id="1">
        <label>gr::limesdr_fpga::sink_fpga</label>
        <link refid="classgr_1_1limesdr__fpga_1_1sink__fpga"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>gr::limesdr_fpga::sink_fpga_impl</label>
        <link refid="classgr_1_1limesdr__fpga_1_1sink__fpga__impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gr::sync_block</label>
      </node>
      <node id="1">
        <label>gr::limesdr_fpga::sink_fpga</label>
        <link refid="classgr_1_1limesdr__fpga_1_1sink__fpga"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" line="29" column="1" bodyfile="/home/martin/Documents/EPL/M1/Project-Embedded/LELEC210X/telecom/gr-limesdr-3-10/include/limesdr_fpga/sink_fpga.h" bodystart="30" bodyend="194"/>
    <listofallmembers>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1aade1722dc35cd9dd0c6ad66fc08094a7" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>calibrate</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a524319214077b67b9bc8ec69fe5fa70b" prot="public" virt="non-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>make</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ada66db23db758aeb7ea4a42cb5491328" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>read_gpio</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a79fbe05e44f7b784891caaabc0801f82" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_antenna</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a1ec91b7945d1eb75210d6f8e00012d12" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_bandwidth</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a047492a83a7070f3a247f0d8c9d26e39" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_buffer_size</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a99ecd8d500e755d77d98a2006e2bc8ee" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a66db89a5b359c359dc9951012d69ed7a" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_digital_filter</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a4e8b1667ff902b5883a73467dade77fb" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_gain</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab029fb0b30a34b12d5efef98597f615e" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_gpio_dir</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ad198f9150b40eccd48251672001af63e" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_nco</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a79ab082f07e516a4b4dca8424833ef46" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_oversampling</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab8f95b452587522b4451b620c171844b" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_sample_rate</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a76b975df9e62a95cd34cf8ebb7451bfd" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>set_tcxo_dac</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1ab990a12df6e3205f5d3ef669eeb633a5" prot="public" virt="non-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>sptr</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a4efd755f6efe793a5600a35a292e8d55" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>write_gpio</name></member>
      <member refid="classgr_1_1limesdr__fpga_1_1sink__fpga_1a627b4d295ae063099cbcf6b804d03d84" prot="public" virt="pure-virtual"><scope>gr::limesdr_fpga::sink_fpga</scope><name>write_lms_reg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
